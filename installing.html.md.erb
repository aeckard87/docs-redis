---
title: Installing Redis for PCF
owner: London Services
---

<strong><%= modified_date %></strong>


## <a id="install"></a>Download and Install the Tile

To add Redis for Pivotal Cloud Foundry (PCF) to Ops Manager, follow the procedure for adding PCF Ops Manager tiles:

1. Download the product file from [Pivotal Network](https://network.pivotal.io/products/p-redis). Select the latest release from the **Releases:** drop-down menu.
1. Upload the product file to your Ops Manager installation.
1. Click **Add** next to the uploaded product description in the Available Products view to add this product to your staging area.
1. (Optional) Click the newly added tile to configure your [possible service plans](#service-plans), [syslog draining](#syslog), and [backups](maintain.html#backup).
1. Click **Apply Changes** to install the service.

See the [network configuration](./installing.html#network-configuration) section for guidance on the ports and ranges used in the Redis service.

##  <a id="service-plans"></a>Configure Redis for PCF Service Plans

Select the **Redis** tile in the Ops Manager Installation Dashboard to display the configuration page, and allocate resources to Redis service plans.</br></br>
    ![config overview](redis-config-overview.png)

###  <a id="on-demand-config"></a>On-Demand Service Settings

1. Create a [service network] (https://docs.pivotal.io/redis/1-8/architecture.html#architecture_networks). From an IAAS perspective, creation of a service network is identical to any other network previously created for tiles on Ops Manager. The only change is that the Operator needs to mark the network as a “Service Network” in Ops Manager to instruct Ops Manager to not perform IP management in that network.
If you wish to use Redis for PCF without the On-Demand service, you will still need to create an [empty service network](https://discuss.pivotal.io/hc/en-us/articles/115010154387) to install the tile.
1. Click **On-Demand Service Settings**, and then enter the **Maximum service instances across all on-demand plans**. The maximum number of instances you set for all your cache plans combined cannot exceed this number.</br></br>
    ![settings](on-demand-settings.png)</br></br>
    Review the guidance to understand the resource implications for on-demand instances. See [Resource Usage Planning for On-Demand plans](./architecture.html#resource).
1. Select the **Allow outbound internet access from service instances** checkbox. This checkbox must be ticked to allow external log forwarding, sending backup artifacts to external destinations, and communicating with an external BOSH blob store.
  <p class="note"><strong>Note</strong>: Outbound network traffic rules also depend on your IaaS settings. Consult your Ops Manager administrator to ensure that your IaaS allows outbound traffic to the external networks you need.</p>
1. Click **Cache Plan 1**, **2**, or **3** to configure it.</br></br>

    You can configure up to three cache plans with appropriate memory and disk sizes for your use case(s). Resource configuration options may vary on different IAASs.
</br>
</br>
    The default names of the three cache plans provided reflect that instances of these plans are intended to be used for different cache sizes, as follows:</br></br>
    * **cache-small**: A Redis instance deployed to a dedicated VM, suggested to be configured with ~1&nbsp;GB of memory and >3.5&nbsp;GB of persistent disk
    * **cache-medium**: A Redis instance deployed to a dedicated VM, suggested to be configured with ~2&nbsp;GB of memory and >10&nbsp;GB of persistent disk
    * **cache-large**: A Redis instance deployed to a dedicated VM, suggested to be configured with ~4&nbsp;GB of memory and >14&nbsp;GB of persistent disk</br>

    ![on demand config](on-demand-config.png)
    Configure the following settings for your cache plan(s). Any pre-populated default settings have been pre-configured according to the memory/disk size of each plan.
    <table class="nice">
          <th>Field</th>
          <th>Description</th>
          <tr>
            <td>**Plan**</td>
            <td>Select Active or Passive. An inactive plan does not need any further configuration.</td>
          </tr>
          <tr>
            <td>**Plan Name**</td>
            <td>Enter a name that will appear in the service catalog.</td>
          </tr>
          <tr>
            <td>**Plan Description**</td>
            <td>Enter a description that will appear in the service catalog. Specify details that will be relevant to app developers.</td>
          </tr>
          <tr>
            <td>**Plan Quota**</td>
            <td>App developers can create instances until this quota is reached. 
              For more information, see [Setting Limits for On-Demand Service Instances](./set-quotas.html).</td>
          </tr>
          <tr>
            <td>**CF Service Access**</td>
            <td>Select a service access level. This setting does not modify the permissions that have been previously set, and allows for manual access to be configured from the CLI.</td>
          </tr>
          <tr>
            <td>**AZ to deploy Redis instances of this plan**</td>
            <td>This is the AZ in which to deploy the Redis instances from the plan. This must be one of the AZs of the service network (configured in the Ops Manager Director tile).</td>
          </tr>
          <tr>
            <td>**Server VM type**</td>
            <td>Select the VM type. Pivotal recommends that the **persistent disk should be at least 3.5x the VM memory**.</td>
          </tr>
          <tr>
            <td>**Server Disk type**</td>
            <td>Select the disk type. Pivotal recommends that the **persistent disk should be at least 3.5x the VM memory**.</td>
          </tr>
          <tr>
            <td>**Redis Client Timeout**</td>
            <td>Redis Client Timeout refers to the server timeout for an idle client specified in seconds. The default setting is 3600. Adjust this setting as needed.</td>
          </tr>
          <tr>
            <td>**Redis TCP Keepalive**</td>
            <td>Redis TCP Keepalive refers to the interval (in seconds) at which TCP ACKS are sent to clients. The default setting is 60. Adjust this setting as needed.</td>
          </tr>
          <tr>
            <td>**Max Clients**</td>
            <td>Max Clients refers to the maximum number of clients that can be connected at any one time. Per plan, the default setting is 1000 for small, 5000 for medium and 10000 for large. Adjust this setting as needed.</td>
          </tr>
          <tr>
            <td>**Lua Scripting**</td>
            <td>Enable or disable Lua Scripting as needed. Pivotal recommends that Lua Scripting be disabled.</td>
          </tr>
    </table>

1.  Click the **Save** button.

#### <a id="change-on-demand"></a>Updating On-Demand Service Plans

Operators can update certain settings after the plans have been created.
If the Operator updates the VM size, disk size, or the Redis configuration settings
(enabling Lua Scripting, max-clients, timeout and TCP keep-alive),
these settings will be implemented in all instances that are already created.

Operators should not downsize the VMs or disk size as this can cause data loss in pre-existing instances. Additionally, Operators cannot make a plan that was previously active, inactive, until all instances of that plan have been deleted.

#### <a id="remove-on-demand"></a>Removing On-Demand Service Plans

If you want to remove the On-Demand Service from your tile, do the following: <br/>

1. Go to the **Resource Config** page on the Redis for PCF tile, and set the **Redis On-Demand Broker** job instances to 0.

1. Navigate to the **Errands** page on the Redis for PCF tile, and set the following errands to **off**:
    * Register On-demand Redis Broker
    * On-demand Broker Smoke Tests
    * Upgrade all On-demand Redis Service Instances
    * Deregister On-demand Redis Broker

1. Create an empty service network. For instructions, see this [Knowledge Base article](https://discuss.pivotal.io/hc/en-us/articles/115010154387).

1. Go to each of the three Cache Plan pages on the Redis for PCF tile, and set each cache plan to **Plan Inactive**. For example:
  ![cache plan inactive](cache-plan-inactive.png)


###  <a id="shared-vm-config"></a>Shared-VM Plan

1.  Select the **Shared-VM Plan** tab to configure the memory limit for each Redis instance and the maximum number of instances that can be created.
![shared vm config](shared-vm-config.png)

1.  Enter the maximum number of instances and the memory limit for each Redis instance.

    Shared-VM instances run on the Redis broker VM, so 
    the memory and instance limits for instances of this plan depend on the total system memory of your Redis broker VM. 
    
    <br>Pivotal recommends you only allow up to 45% of the Redis broker VM's total system memory to be used by all shared-VM instances combined.
    This is due to the amount of memory required to support Redis persistence and to run Redis broker and system tasks.

    <br />To configure the limits in these fields, 
    estimate the maximum memory that could be used by all your Redis shared-VM instances combined. 
    If that figure is higher than 45% of the Redis broker 
    VM's total system memory, you can do one of the following:<br><br>
    <ul>
      <li>Decrease the **Redis Instance Memory Limit**.</li>
      <li>Decrease the number of instances in **Redis Service Instance Limit**.</li>
      <li>Increase the RAM for the Redis Broker in the **Resource Config** tab as shown below.
          <img src="./images/redis-broker-resource.png"></li>
    </ul>

    Here are some examples for setting these limits:

    <table border="1" class="nice">
    	<tr>
    		<th>Redis Broker Total VM Memory</th>
    		<th>Redis Instance Memory Limit</th>
    		<th>Redis Service Instance Limit</th>
    	</tr>
    	<tr>
    	 	<td>16&nbsp;GB</td>
    	 	<td>512&nbsp;MB</td>
    	 	<td>14</td>
     	</tr>
      <tr>
    	 	<td>16&nbsp;GB</td>
    	 	<td>256&nbsp;MB</td>
    	 	<td>28</td>
     	</tr>
      <tr>
    	 	<td>64&nbsp;GB</td>
    	 	<td>512&nbsp;MB</td>
    	 	<td>56</td>
     	</tr>
    </table>


    <br />It is possible to configure a larger Redis Service Instance Limit, if you are confident that the majority of the deployed instances will not be using a large amount of their allocated memory, for example in development or test environments.
    <p class="note"><strong>Note</strong>:
      This is not supported, and could cause your server to run out of memory.
      If this happens your users may not be able to write any further data to any Redis instance.
    </p>

1. Click the **Save** button.

1. You must disable the On-Demand Service if you do not wish to use it. Please see the directions [here](#remove-on-demand).

1.  Select the **Resource Config** tab to change the allocation of resources for the Redis Broker.
    <br />The Redis Broker server will run all of the Redis instances for your Shared-VM plan. From this screen you may increase or decrease the CPU, RAM, Ephemeral Disk & Persistent Disk made available, as required.

###  <a id="dedicated-vm-config"></a>Dedicated-VM Plan

<p class="note"><strong>Note</strong>: As of Redis for PCF v1.11, 
    the on-demand service is at feature parity with the dedicated-VM service.
    The dedicated-VM service plan will be deprecated. 
    Pivotal recommends using the on-demand service plan.</p>

1.  To configure the Dedicated-VM plan, click the **Resource Config** tab to change the allocation of resources for the **Dedicated Node**.
<a id="resource-config"></a>![dedicated vm config](dedicated-vm-config.png)
<br>
  - The default configuration creates five dedicated nodes (VMs). 
  Each node can run one Redis dedicated-VM instance.
  - You can change the number of dedicated nodes, and configure the size of the 
  persistent and ephemeral disks, and the CPU and RAM for each node.
  - The default VM size is small. It is important that you set the correct 
  VM size to handle anticipated loads. 
  - A Redis dedicated-VM instance is allowed up to 45% of the total system RAM on the VM. You can set this with the `maxmemory` configuration. 
  The app can use 100% of `maxmemory`, that is, up to 45% of the system RAM. 
  - Pivotal recommends the persistent disk be set to 3.5x the amount of system RAM.

1. Click the **Save** button.

1. You must disable the On-Demand Service if you do not wish to use it. Please see the directions [here] (#remove-on-demand).

### <a id="resources"></a>Configure Resources for Dedicated-VM and Shared-VM Plans

To configure resources for the Shared-VM and Dedicated-VM plans, click the **Resource Config** settings tab on the Redis for PCF tile.

* The Shared-VM plan is on the **Redis Broker** resource.
* The Dedicated-VM plan is on the **Dedicated Node** resource.

The following are the default resource and IP requirements for Redis for PCF when using the Shared-VM or Dedicated-VM plans:
<table border="1" class="nice">
  <tr>
    <th>Product</th>
    <th>Resource</th>
    <th>Instances</th>
    <th>CPU</th>
    <th>Ram</th>
    <th>Ephemeral</th>
    <th>Persistent</th>
    <th>Static IP</th>
    <th>Dynamic IP</th>
  </tr>
  <tr>
    <td>Redis</td>
    <td>Redis Broker</td>
    <td>1</td>
    <td>2</td>
    <td>3072</td>
    <td>4096</td>
    <td>9216</td>
    <td>1</td>
    <td>0</td>
  </tr>
  <tr>
    <td>Redis</td>
    <td>Dedicated Node</td>
    <td>5</td>
    <td>2</td>
    <td>1024</td>
    <td>4096</td>
    <td>4096</td>
    <td>1</td>
    <td>0</td>
  </tr>
  <tr>
    <td>Redis</td>
    <td>Broker Registrar</td>
    <td>1</td>
    <td>1</td>
    <td>1024</td>
    <td>2048</td>
    <td>0</td>
    <td>0</td>
    <td>1</td>
  </tr>
  <tr>
    <td>Redis</td>
    <td>Broker De-Registrar</td>
    <td>1</td>
    <td>1</td>
    <td>1024</td>
    <td>2048</td>
    <td>0</td>
    <td>0</td>
    <td>1</td>
  </tr>
  <tr>
    <td>Redis</td>
    <td>Compliation</td>
    <td>2</td>
    <td>2</td>
    <td>1024</td>
    <td>4096</td>
    <td>0</td>
    <td>0</td>
    <td>1</td>
  </tr>
</table>

### <a id="disable-shared-dedicated"></a>Disable Shared and Dedicated VM Plans

You can disable Shared and Dedicated VM Plans by doing the following while configuring Redis tile:

1. Ensure at least one On-Demand plan is active.

1. Configure the following tabs:<br><br>
  * **Shared-VM Plan**:<br>
    a. Set **Redis Service Instance Limit** to 0.<br>
    b. Click **Save**.<br><br>
  * **Errands**:<br>
    a. Set **Broker Registrar** to Off.<br>
    b. Set **Smoke Tests** to Off.<br>
    c. Set **Broker Deregistrar** to Off.<br>
    d. Leave all four On-Demand errands On. <br>
    e. Click **Save**.<br><br>
  * **Resource Config**:<br>
    a. Decrease **Redis Broker** Persistent disk type to the smallest size available.<br>
    b. Decrease **Redis Broker** VM type to the smallest size available.<br>
    c. Set **Dedicated Node** Instances to 0.<br>
    d. Click **Save**.<br>

### <a id="memory-limits"></a>Memory Limits for Dedicated-VM and Shared-VM Plans

Pivotal recommends being aware of memory limits before you configure shared or dedicated VM instances.

#### Memory Limits for Dedicated-VM Plans
With dedicated-VM plans, there is one Redis service instance on each VM. 
The maximum memory an instance of these plans can use should be at most 45% of the VM's memory.

#### Memory Limits for Shared-VM Plans
Additional calculation is required to configure memory limits for shared-VM plans. 
With these plans, several service instances share the VM, and the Redis broker also runs on this same VM. 
Therefore, the memory used by all the shared-vm instances combined should be at most 45% of the memory of the Redis broker VM.

To configure the limits in these fields, 
estimate the maximum memory that could be used by all your Redis shared-VM instances combined. 
If that figure is higher than 45% of the Redis broker 
VM's total system memory, you can do one of the following:

  + Decrease the **Redis Instance Memory Limit**.
  + Decrease the number of instances in **Redis Service Instance Limit**.
  + Increase the RAM for the Redis Broker in the **Resource Config** tab as shown below.

    <img src="./images/redis-broker-resource.png">

  Here are some examples for setting these limits:

  <table border="1" class="nice">
      <tr>
        <th>Redis Broker VM Total Memory</th>
        <th>Redis Instance Memory Limit</th>
        <th>Redis Service Instance Limit</th>
      </tr>
      <tr>
        <td>16&nbsp;GB</td>
        <td>512&nbsp;MB</td>
        <td>14</td>
      </tr>
      <tr>
        <td>16&nbsp;GB</td>
        <td>256&nbsp;MB</td>
        <td>28</td>
      </tr>
      <tr>
        <td>64&nbsp;GB</td>
        <td>512&nbsp;MB</td>
        <td>56</td>
      </tr>
  </table>

  <p class="note"><strong>Note</strong>: It is possible to configure a larger <strong>Redis Service Instance Limit</strong>, 
      if you are confident that the majority of the deployed instances will not use a large amount of their allocated memory, 
      for example in development or test environments. <br><br>However, this practice is not supported and can cause your server to run out of memory,
      preventing users from writing any more data to any Redis shared-VM instance.
  </p>

### <a id="configurations"></a>Additional Redis Configurations

The operator can configure further properties per plan beyond memory and disk sizes. Appropriate defaults have been pre-configured according to the memory/disk size of each plan.

Operators can update certain plan settings after the plans have been created.
If the Operator updates the VM size, disk size, or the Redis configuration settings (enabling Lua Scripting, max-clients, timeout and TCP keep-alive), these settings will be implemented in all instances already created. Operators should not downsize the VMs or disk size as this can cause data loss in pre-existing instances.

The following table describes properties that operators can update in the [configuration page](installing.html#service-plans).

<table border="1" class="nice">
  <tr>
    <th>Property</th>
    <th>Default</th>
    <th>Description</th>
  </tr>
  <tr>
    <td><strong>Redis Client Timeout</strong></td>
    <td>3600</td>
    <td>Server timeout for an idle client specified in seconds (e.g., 3600)</td>
  </tr>
  <tr>
    <td><strong>Redis TCP Keepalive</strong></td>
    <td>60</td>
    <td>The max number of connected clients at the same time</td>
  </tr>
  <tr>
    <td><strong>Max Clients</strong></td>
    <td>1000/5000/10000 (small/medium/large)</td>
    <td>The max number of connected clients at the same time</td>
  </tr>
  <tr>
    <td><strong>Lua Scripting</strong></td>
    <td>Enabled</td>
    <td>Enable/Disable Lua scripting</td>
  </tr>
  <tr>
    <td><strong>Plan Quota</strong></td>
    <td>20</td>
    <td>Maximum number of Redis service instances for this plan, across all orgs and spaces.
    For more information, see <a href="./set-quotas.html">Setting Limits for On-Demand Service Instances</a>.</td>
  </tr>
</table>

For settings that app developers can configure, see [Customize an On-Demand Service Instance](./using.html#custom).


## <a id="syslog"></a>Configure Syslog Forwarding

Pivotal recommends that operators configure syslog forwarding to a remote destination. Forwarding your system logs to a remote destination enables:

* Viewing logs from every VM in the Redis for PCF deployment in one place
* Effective troubleshooting when logs are lost on the source VM
* Setting up alerts for important error logs to monitor the deployment

All logs follow the RFC5424 format.

Follow these steps to configure syslog forwarding:

1. Click the Redis for PCF tile to display the configuration page, and then click the **Syslog** tab on the sidebar navigation.

    <br>![syslog configuration](syslog-forwarding5.png)

1. Select either the **Yes without encryption** or the **Yes with TLS encryption** radio button.

    <p class="note"><strong>Note:</strong> To use syslog for on-demand instances 
       you must enable outbound internet access in the <strong>On-Demand Service Settings</strong> tab.</p>

1. Enter the Syslog address and port, and select the transport protocol of your remote destination.
   You can only use TCP if you are using TLS encryption.<br><br>
   The information required for these fields is provided by your remote destination.
   **Address** should be something such as `logs.papertrailapp.com`, and the port will be a number such as `41635`.

1. Select the format for your logs. [RFC5424](https://tools.ietf.org/html/rfc5424) is the suggested format.<br><br>
   For instances of the Redis on-demand plan, all logs follow RFC5424 format.
   Instances of the Dedicated-VM and Shared-VM plans allow for the Operator to select their log format to be either their legacy format or RFC5424.
   PCF is moving toward all syslogs consistently using RFC5424 format.

1. If you selected **Yes with TLS encryption**, complete these fields:<br><br>
  * **Permitted Peer** refers to the remote syslog destination. It allows each VM to establish an encrypted tunnel with the remote syslog destination. The Permitted Peer is either the accepted fingerprint (SHA1) or name of the remote peer, for example `*.example.com`.
  * **TLS CA certificate** refers to the trusted certificate authorities for the remote syslog destination. Large certificate chains (> 8kb) are not supported.

1.  Click **Save**.

## <a id="azs"></a>Networks, Security, and Assigning AZs

###  <a id="network-configuration"></a>Network Configuration

Pivotal recommends that each type of Redis for PCF service run in its own network.
For example, run a Redis for PCF on-demand service on a separate network from a Redis for PCF shared-VM service.

The following ports and ranges are used in this service:

| Port                  | Protocol                     | Direction and Network                                                                          | Reason                                                                                                                      |
|:----------------------|:-----------------------------|:-----------------------------------------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------|
| 8300<br>8301             | TCP<br>TCP and UDP | Inbound to CloudFoundry network, outbound from service broker and service instance networks* | Communication between the CF consul\_server and consul\_agents on Redis deployment; used for metrics                         |
| 4001                  | TCP                          | Inbound to CloudFoundry network, outbound from service broker and service instance networks* | Used by the Redis metron_agent to forward metrics to the CloudFoundry etcd server                                          |
| 12350                 | TCP                          | Outbound from CloudFoundry to the cf-redis-broker service broker network                       | (Only if using a cf-redis-broker) Access to the cf-redis-broker from the cloud controllers.                                 |
| 12345                 | TCP                          | Outbound from CloudFoundry to the on-demand service broker network                             | (Only if using an On-Demand service) For access to the on-demand service broker from the cloud controllers          |
| 6379                  | TCP                          | Outbound from CloudFoundry to any service instance networks (dedicated-node and on-demand)     | Access to all dedicated nodes and on-demand nodes from the Diego Cell and Diego Brain network(s)                            |
| 32768-61000           | TCP                          | Outbound from CloudFoundry to the cf-redis-broker service broker network                       | From the Diego Cell and Diego Brain network(s) to the service broker VM. This is only required for the shared service plan. |
| 80 or 443<br>(Typically) | http or https<br>respectively  | Outbound from any service instance networks                                                    | Access to the backup blobstore                                                                                             |
| 8443<br>25555           | TCP                          | Outbound from any on-demand service broker network to the bosh director network                | For the on-demand service, the on-demand service broker needs to talk to `bosh director`                                    |

\* Typically the service broker network and service instance network(s) are the same.

###  <a id="asg"></a> Application Security Groups###

To allow this service to have network access you must create [Application Security Groups (ASGs)](http://docs.pivotal.io/pivotalcf/1-10/adminguide/app-sec-groups.html). Ensure your security group allows access to the Redis Service Broker VM and Dedicated VMs configured in your deployment. You can obtain the IP addresses for these VMs in Ops Manager under the <strong>Resource Config</strong> section for the Redis tile.</p>

<p class="note"><strong>Note</strong>: Without ASGs, this service is unusable.</p>

#### Application Container Network Connections

Application containers that use instances of the Redis service require the following outbound network connections:

<table><thead>
<tr>
<th>Destination</th>
<th>Ports</th>
<th>Protocol</th>
<th>Reason</th>
</tr>
</thead><tbody>
<tr>
<td><code>ASSIGNED_NETWORK</code></td>
<td>32768-61000</td>
<td>tcp</td>
<td>Enable application to access shared vm service instance</td>
</tr>
<tr>
<td><code>ASSIGNED_NETWORK</code></td>
<td>6379</td>
<td>tcp</td>
<td>Enable application to access dedicated vm service instance</td>
</tr>
</tbody></table>

Create an ASG called `redis-app-containers` with the above configuration and bind it to the appropriate space or, to give all started apps access, bind to the `default-running` ASG set and restart your apps. Example:

```json
[
  {
    "protocol": "tcp",
    "destination": "ASSIGNED_NETWORK",
    "ports": "6379"
  }
]
```

###  <a id="az-config"></a>Assigning AZs
As of Redis for PCF 1.9, you can assign multiple AZs to Redis jobs, however this will not guarantee high availability.

For more information, see [About Multiple AZs in Redis for PCF](index.html#other-notes).

![AZ Assignment Diagram](AZ-assignment.png)

## <a id="validation"></a>Validating Installation

Smoke tests are run as part of Redis for PCF installation to validate that the install succeeded. Smoke tests are described <a href="https://docs.pivotal.io/redis/1-8/smoke-tests.html">here</a>.


## <a id="uninstall"></a>Uninstalling Redis for PCF

To uninstall Redis for PCF, do the following:

1. In the PCF Ops Manager Installation dashboard, click the trash can icon in the lower right hand corner of the Redis for PCF tile.
1. Confirm deletion of the product, and then click **Apply Changes**.
