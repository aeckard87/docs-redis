---
title: Installing and Upgrading Redis for PCF
owner: London Services
---

## <a id="install"></a>Download and Install the Tile

To add Redis for PCF to Ops Manager, follow the procedure for adding PCF Ops Manager tiles:

1. Download the product file from [Pivotal Network](https://network.pivotal.io/products/p-redis). Select the latest release from the **Releases:** drop-down menu.
1. Upload the product file to your Ops Manager installation.
1. Click **Add** next to the uploaded product description in the Available Products view to add this product to your staging area.
1. (Optional) Click the newly added tile to configure your [possible service plans](#configuration), [syslog draining](#syslog), and [backups](#backup).
1. Click **Apply Changes** to install the service.

After installing, be sure to:

+ Monitor the health and performance of your Redis instances by setting up [logging] (https://docs.pivotal.io/redis/1-8/installing.html#syslog).
+ Understand the usage of different plans by setting up tracking of [usage metrics] (https://docs.pivotal.io/redis/1-8/monitoring.html)
and updating the quota per plan if you run into issues.
+ Communicate with your App Developers to understand how the plans are meeting their use case. You can update your plans,
including resource sizing if your App Developers need to grow beyond the current plan's resource size.

##  <a id="service-plans"></a>Configure Redis for PCF Service Plans

Select the **Redis** tile in the Ops Manager Installation Dashboard to display the configuration page, and allocate resources to Redis service plans.</br></br>
    ![config overview](redis-config-overview.png)

<p class="note"><strong>Note</strong>: As of Redis for PCF v1.8,
Redis for PCF requires that you define and select a service network for all service plans described below.
However, if you are not using the on-demand service, you can create an empty service network by following instructions in
<a href="https://discuss.pivotal.io/hc/en-us/articles/115010154387"> this Knowledge Base article</a>.</p>

###  <a id="on-demand-config"></a>On-Demand Service

1. Create a [service network] (https://docs.pivotal.io/redis/1-8/architecture.html#architecture_networks), and select it in the **Assign AZs and Networks** tab. <br><br>From an IAAS perspective, creation of a service network is identical to any other network previously created for tiles on Ops Manager. The only change is that the Operator needs to mark the network as a “Service Network” in Ops Manager to instruct Ops Manager to not perform IP management in that network.

1. Click **On-Demand Service Settings**, and then enter the **Maximum service instances across all on-demand plans**. The maximum number of instances you set for all your cache plans combined cannot exceed this number.</br></br>
    ![settings](on-demand-settings.png)</br></br>
    Review the guidance to understand the [resource implications for on-demand instances] (./recommended.html#resources).

1. Enable the **Allow outbound internet access from service instances** checkbox. This is critical for service instances to be able to use logs or backups. This the checkbox must be ticked if an external blob store has been configured for BOSH.

1. Click **Cache Plan 1**, **2**, or **3** to configure it.</br></br>

    You can configure up to three cache plans with appropriate memory and disk sizes for your use case(s). Resource configuration options may vary on different IAASs.
</br>
</br>
    The default names of the three cache plans provided reflect that instances of these plans are intended to be used for different cache sizes, as follows:</br></br>
    * **cache-small** — A Redis instance deployed to a dedicated VM, suggested to be configured with ~1&nbsp;GB of memory and >3.5&nbsp;GB of persistent disk
    * **cache-medium** — A Redis instance deployed to a dedicated VM, suggested to be configured with ~2&nbsp;GB of memory and >10&nbsp;GB of persistent disk
    * **cache-large** — A Redis instance deployed to a dedicated VM, suggested to be configured with ~4&nbsp;GB of memory and >14&nbsp;GB of persistent disk</br>

    ![on demand config](on-demand-config.png)
    Configure the following settings for your cache plan(s). Any pre-populated default settings have been pre-configured according to the memory/disk size of each plan.
    <table class="nice">
          <th>Field</th>
          <th>Description</th>
          <tr>
            <td>**Plan**</td>
            <td>Select Active or Passive. An inactive plan does not need any further configuration.</td>
          </tr>
          <tr>
            <td>**Plan Name**</td>
            <td>Enter a name that will appear in the service catalog.</td>
          </tr>
          <tr>
            <td>**Plan Description**</td>
            <td>Enter a description that will appear in the service catalog. Specify details that will be relevant to App Developers.</td>
          </tr>
          <tr>
            <td>**Plan Quota**</td>
            <td>App Developers can create instances until this quota is reached.</td>
          </tr>
          <tr>
            <td>**CF Service Access**</td>
            <td>Select a service access level. This setting does not modify the permissions that have been previously set, and allows for manual access to be configured from the CLI.</td>
          </tr>
          <tr>
            <td>**AZ to deploy Redis instances of this plan**</td>
            <td>This is the AZ in which to deploy the Redis instances from the plan. This must be one of the AZs of the service network (configured in the Ops Manager Director tile).</td>
          </tr>
          <tr>
            <td>**Server VM type**</td>
            <td>Select the VM type. Pivotal recommends that the **persistent disk should be at least 3.5x the VM memory**.</td>
          </tr>
          <tr>
            <td>**Server Disk type**</td>
            <td>Select the disk type. Pivotal recommends that the **persistent disk should be at least 3.5x the VM memory**.</td>
          </tr>
          <tr>
            <td>**Redis Client Timeout**</td>
            <td>Redis Client Timeout refers to the server timeout for an idle client specified in seconds. The default setting is 3600. Adjust this setting as needed.</td>
          </tr>
          <tr>
            <td>**Redis TCP Keepalive**</td>
            <td>Redis TCP Keepalive refers to the interval (in seconds) at which TCP ACKS are sent to clients. The default setting is 60. Adjust this setting as needed.</td>
          </tr>
          <tr>
            <td>**Max Clients**</td>
            <td>Max Clients refers to the maximum number of clients that can be connected at any one time. Per plan, the default setting is 1000 for small, 5000 for medium and 10000 for large. Adjust this setting as needed.</td>
          </tr>
          <tr>
            <td>**Lua Scripting**</td>
            <td>Enable or disable Lua Scripting as needed. Pivotal recommends that Lua Scripting be disabled.</td>
          </tr>
    </table>

1.  Click the **Save** button.

#### <a id="change-on-demand"></a>Updating On-Demand Service Plans

Operators can update certain settings after the plans have been created.
If the Operator updates the VM size, disk size, or the Redis configuration settings
(enabling Lua Scripting, max-clients, timeout and TCP keep-alive),
these settings will be implemented in all instances that are already created.

Operators should not downsize the VMs or disk size as this can cause data loss in pre-existing instances. Additionally, Operators cannot make a plan that was previously active, inactive, until all instances of that plan have been deleted.

#### <a id="remove-on-demand"></a>Removing On-Demand Service Plans

If you want to remove the On-Demand Service from your tile, do the following: <br/>

1. Go to the **Resource Config** page on the Redis for PCF tile, and set the **Redis On-Demand Broker** job instances to 0.

1. Navigate to the **Errands** page on the Redis for PCF tile. Set the following errands to **off**:
    * Register On-demand Redis Broker
    * On-demand Broker Smoke Tests
    * Upgrade all On-demand Redis Service Instances
    * Deregister On-demand Redis Broker

1. Create an empty service network.
   For instructions, see this [Knowledge Base article](https://discuss.pivotal.io/hc/en-us/articles/115010154387).

1. Go to each of the three Cache Plan pages on the Redis for PCF tile, and set each cache plan to **Plan Inactive**. For example:
  ![cache plan inactive](cache-plan-inactive.png)


###  <a id="shared-vm-config"></a>Shared-VM Plan

1. As of Redis for PCF v1.8, you must create a separate service network.
   To use Redis for PCF without the On-Demand service,
   create an [empty service network](https://discuss.pivotal.io/hc/en-us/articles/115010154387) to install the tile.
   Select the empty service network in the **Assign AZs and Networks** tab.

1.  Select the **Shared-VM Plan** tab to configure the memory limit for each Redis instance and the maximum number of instances that can be created.
![shared vm config](shared-vm-config.png)

1.  Enter the maximum number of instances and the memory limit for each Redis instance.

    Shared-VM instances run on the Redis broker. 
    The memory and instance limits for instances of these plans depend on the total memory of your Redis broker. 
    
    <br>Pivotal recommends you only allow up to 45% of your Redis broker's total memory to be used by all shared-VM instances combined.
    This is due to the amount of memory required to support Redis persistence and to run Redis broker and system tasks.

    <br />To configure these limits, 
    estimate the maximum memory that could be used by all your Redis shared-VM instances combined. Make sure that figure does not exceed
    45% of the total memory of the Redis broker. If that figure is higher than 45% of the Redis broker memory, 
    you can either increase the broker memory or decrease the number of Redis instances.
    
    <br />Here are some examples for setting these limits:

    <table border="1" class="nice">
    	<tr>
    		<th>Redis Broker Total Memory</th>
    		<th>Redis Instance Memory Limit</th>
    		<th>Redis Service Instance Limit</th>
    	</tr>
    	<tr>
    	 	<td>16&nbsp;GB</td>
    	 	<td>512&nbsp;MB</td>
    	 	<td>14</td>
     	</tr>
      <tr>
    	 	<td>16&nbsp;GB</td>
    	 	<td>256&nbsp;MB</td>
    	 	<td>28</td>
     	</tr>
      <tr>
    	 	<td>64&nbsp;GB</td>
    	 	<td>512&nbsp;MB</td>
    	 	<td>56</td>
     	</tr>
    </table>


    <br />It is possible to configure a larger Redis Service Instance Limit, if you are confident that the majority of the deployed instances will not be using a large amount of their allocated memory, for example in development or test environments.
    <p class="note"><strong>Note</strong>:
      This is not supported, and could cause your server to run out of memory.
      If this happens your users may not be able to write any further data to any Redis instance.
    </p>


1.  Select the **Resource Config** tab to change the allocation of resources for the Redis Broker.
    <br />The Redis Broker server will run all of the Redis instances for your Shared-VM plan. From this screen you may increase or decrease the CPU, RAM, Ephemeral Disk & Persistent Disk made available, as required.

1.  Click **Save**.

1. You must disable the On-Demand Service if you do not wish to use it. Please see the directions [here] (https://docs.pivotal.io/redis/1-8/installing.html#removing-on-demand-service-plans).

###  <a id="dedicated-vm-config"></a>Dedicated-VM Plan

1. As of Redis for PCF v1.8, you must create a separate service network.
   To use Redis for PCF without the On-Demand service,
   create an [empty service network](https://discuss.pivotal.io/hc/en-us/articles/115010154387) to install the tile.
   Select the empty service network in the **Assign AZs and Networks** tab.

1.  Select the **Resource Config** tab to change the allocation of resources for the Dedicated Node.
![dedicated vm config](dedicated-vm-config.png)
<br>
  - The default configuration creates 5 dedicated nodes. 
  Each node is capable of running one Redis instance.
  - You can increase or decrease the number of dedicated nodes, the size of the 
  Persistent and Ephemeral Disks, and the CPU and RAM, as required.
  - The default VM size is small. It is important that the operator set the correct 
  VM size to handle anticipated loads. 
  - Redis is allowed up to 45% of the total system RAM. This is set through the `maxmemory` configuration. 
  The app can use 100% of `maxmemory`, which would be up to 45% of the system RAM. 
  - Pivotal recommends the persistent disk be set to 3.5x the amount of RAM.

1.  Click the **Save** button.

1. You must disable the On-Demand Service if you do not wish to use it. Please see the directions [here] (https://docs.pivotal.io/redis/1-8/installing.html#removing-on-demand-service-plans).


## <a id="syslog"></a>Configure Syslog Output

Pivotal recommends that operators configure a syslog output.
For On-Demand instances, all logs follow RFC5424 format. Dedicated-VM and Shared-VM plan instances are consistent with their previous format.

1.  Add the Syslog address, Syslog port and transport protocol of your log management tool.

    The information required for these fields is provided by your log management tool.

    ![syslog configuration](syslog-forwarding.png)

1.  Click the **Save** button.


## <a id="azs"></a>Networks, Security, and Assigning AZs

###  <a id="network-configuration"></a>Network Configuration

It is recommended that each type of Redis for PCF service run in its own network. 
For example, run a Redis for PCF on-demand service on a separate network from a Redis for PCF shared-VM service.

The following ports and ranges are used in this service:

| Port                  | Protocol                     | Direction and Network                                                                          | Reason                                                                                                                      |
|:----------------------|:-----------------------------|:-----------------------------------------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------|
| 8300<br>8301             | tcp<br>tcp and udp | Inbound to CloudFoundry network, outbound from service broker and service instance networks* | Communication between the CF consul\_server and consul\_agents on Redis deployment; used for metrics                         |
| 4001                  | tcp                          | Inbound to CloudFoundry network, outbound from service broker and service instance networks* | Used by the Redis metron_agent to forward metrics to the CloudFoundry etcd server                                          |
| 12350                 | tcp                          | Outbound from CloudFoundry to the cf-redis-broker service broker network                       | (Only if using a cf-redis-broker) Access to the cf-redis-broker from the cloud controllers.                                 |
| 12345                 | tcp                          | Outbound from CloudFoundry to the on-demand service broker network                             | (Only if using an On-Demand service) For access to the on-demand service broker from the cloud controllers          |
| 6379                  | tcp                          | Outbound from CloudFoundry to any service instance networks (dedicated-node and on-demand)     | Access to all dedicated nodes and on-demand nodes from the Diego Cell and Diego Brain network(s)                            |
| 32768-61000           | tcp                          | Outbound from CloudFoundry to the cf-redis-broker service broker network                       | From the Diego Cell and Diego Brain network(s) to the service broker VM. This is only required for the shared service plan. |
| 80 or 443<br>(Typically) | http or https<br>respectively  | Outbound from any service instance networks                                                    | Access to the backup blobstore                                                                                             |
| 8443<br>25555           | tcp                          | Outbound from any on-demand service broker network to the bosh director network                | For the on-demand service, the on-demand service broker needs to talk to `bosh director`                                    |

\* Typically the service broker network and service instance network(s) are the same.


###  <a id="asg"></a> Application Security Groups###

To allow this service to have network access you must create [Application Security Groups (ASGs)](http://docs.pivotal.io/pivotalcf/1-10/adminguide/app-sec-groups.html). Ensure your security group allows access to the Redis Service Broker VM and Dedicated VMs configured in your deployment. You can obtain the IP addresses for these VMs in Ops Manager under the <strong>Resource Config</strong> section for the Redis tile.</p>

<p class="note"><strong>Note</strong>: Without ASGs, this service is unusable.</p>

#### Application Container Network Connections

Application containers that use instances of the Redis service require the following outbound network connections:

<table><thead>
<tr>
<th>Destination</th>
<th>Ports</th>
<th>Protocol</th>
<th>Reason</th>
</tr>
</thead><tbody>
<tr>
<td><code>ASSIGNED_NETWORK</code></td>
<td>32768-61000</td>
<td>tcp</td>
<td>Enable application to access shared vm service instance</td>
</tr>
<tr>
<td><code>ASSIGNED_NETWORK</code></td>
<td>6379</td>
<td>tcp</td>
<td>Enable application to access dedicated vm service instance</td>
</tr>
</tbody></table>

Create an ASG called `redis-app-containers` with the above configuration and bind it to the appropriate space or, to give all started apps access, bind to the `default-running` ASG set and restart your apps. Example:

```json
[
  {
    "protocol": "tcp",
    "destination": "ASSIGNED_NETWORK",
    "ports": "6379"
  }
]
```

###  <a id="az-config"></a>Assigning AZs
Assigning multiple AZs to Redis jobs will not guarantee high availability.

All of your Shared-VM instances will run on a single node in just one of the configured availability zones and are therefore not highly availabile.

Each On-Demand instance could be assigned to any of the configured availability zones, however each instance still operates as a single node with no clustering. This separation over availability zones provides no high availability.

Each Dedicated-VM instance could be assigned to any of the configured availability zones, however each instance still operates as a single node with no clustering. This separation over availability zones provides no high availability.

![AZ Assignment Diagram](AZ-assignment.png)

## <a id="validation"></a>Validating Installation

Smoke tests are run as part of Redis for PCF installation to validate that the install succeeded. Smoke tests are described <a href="https://docs.pivotal.io/redis/1-8/smoke-tests.html">here</a>.

## <a id="upgrades"></a>Upgrading Redis for PCF

This product enables a reliable upgrade experience between versions of the product that is deployed through Ops Manager.

The upgrade paths are detailed [here](index.html#upgrading) for each released version.

<p class="note"><strong>Note</strong>: As of Redis for PCF v1.8,
Redis for PCF requires that you define and select a service network for all service plans types.
Therefore, you must create a service network if you are upgrading to v1.8.
However, if you are not using the on-demand service,
you can create an empty service network by following instructions in
<a href="https://discuss.pivotal.io/hc/en-us/articles/115010154387"> this Knowledge Base article</a>.</p>

To upgrade the product:

1. Download the latest version of the product from [Pivotal Network](https://network.pivotal.io/products/p-redis).
2. Upload the new .pivotal file to Ops Manager.
3. Upload the stemcell associated with the update (*if required*).
4. Update any new mandatory configuration parameters (*if required*). As part of this step, select a Service Network in the **Assign AZs and Networks** tab. See the **Note** above.
5. Click **Apply Changes** and the rest of the process is automated.

During the upgrade deployment each Redis instance will experience a small period of downtime as each Redis instance is updated with the new software components. This downtime is because the Redis instances are single VMs operating in a non HA setup. The length of the downtime depends on whether there is a stemcell update to replace the operating system image or whether the existing VM can simply have the redis software updated. Stemcells updates incur additional downtime while the IaaS creates the new VM while updates without a stemcell update are faster.

Ops Manager ensures the instances are updated with the new packages and any configuration changes are applied automatically.

Upgrading to a newer version of the product does not cause any loss of data or configuration. This is explicitly tested for during our build and test process for a new release of the product.

### Release Policy

When a new version of Redis is released we aim to release a new version of the product containing this soon after.

Where there is a new version of Redis or another dependent software component such as the stemcell released due to a critical CVE, Pivotal's goal is to release a new version of the product within 48 hours.

## <a id="uninstall"></a>Uninstalling Redis for PCF

To uninstall Redis for PCF, do the following:

1. In the PCF Ops Manager Installation dashboard, click the trash can icon in the lower right hand corner of the Redis for PCF tile.
1. Confirm deletion of the product, and then click **Apply Changes**.
