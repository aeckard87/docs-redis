---
title: Introduction for Operators
owner: London Services
---

<strong><%= modified_date %></strong>

This topic is for PCF operators. It introduces some best practices, but does not provide details about operation.

## <a id="usecases"></a> Recommended Use Cases

On-Demand plans, introduced in Redis for PCF v1.8, are configured by default for cache use cases.
Dedicated-VM and Shared-VM plans are designed for datastore use cases.

Redis can be used in many different ways, including:

* Key/value store for strings and more complex data structures including Hashes, Lists, Sets, Sorted Sets
* Session cache: persistence enables preservation of state
* Full page cache: persistence enables preservation of state
* Database cache: cache queries
* Data ingestion: because Redis is in memory it can ingest data very quickly
* Message Queues: list and set operations. `PUSH`, `POP`, and blocking queue commands.
* Leaderboards/Counting: increments and decrements of sets and sorted sets using `ZRANGE`, `ZADD`, `ZREVRANGE`, `ZRANK`, `INCRBY`, `GETSET`
* Pub/Sub: built in publish and subscribe operations: `PUBLISH`, `SUBSCRIBE`, `UNSUBSCRIBE`

Successful customer use cases handle the downtime that can occur with the Redis for PCF service.
For use cases that can tolerate some downtime from Redis for PCF, such as a lookaside cache, successful use cases tolerate the downtime gap.
For use cases that require a higher level of availability from Redis for PCF, successful applications use an antifragile approach and write more complex failover logic.

For information on Redis for PCF service offerings, see the [On-Demand Plan](./architecture.html) and the [Dedicated and Shared Plans](./architecture-pp.html) pages.

## <a id="Best Practice"></a>Best Practices

Pivotal recommends that operators follow these guidelines:

* **Resource Allocation**---Work with app developers to anticipate memory requirements and to configure VM sizes.
    Instances of Dedicted-VM and Shared-VM services have identical VM sizes.
    However, with the On-Demand service, app developers can choose from three different plans, each with its own VM size and quota. See the service offering for the [On-Demand Plan](./architecture.html) and [Resource Usage Planning for On-Demand plans](./architecture.html#resource).
* **Logs**---Configure a syslog output.
    Storing logs in an external service helps operators debug issues both current and historical. See [Configure Syslog Output](./installing.html#syslog).
* **Monitoring**---Set up a monitoring dashboard for metrics to track the health of the installation.
* **Backing Up Data**---When using Redis for persistence, configure automatic backups so that data can be restored in an emergency.
    Validate the backed-up data with a test restore.
    On-Demand instances are configured for cache uses and are not intended for backups. See [Configuring Automated Backups](./auto-backup.html) and [Manually Backing up and Restoring](./manual-br.html).
* **Using**---Instances of the On-Demand and Dedicated-VM services run on dedicated VMs.
    Apps in production should have a dedicated instance to prevent performance issues caused by sharing an instance.
    The Shared-VM service does not provide a Dedicated-VM per instance,
    and Pivotal recommends that you only use it for development and testing. See the service offerings for the [On-Demand Plan](./architecture.html) and the [Dedicated and Shared Plans](./architecture-pp.html).



## <a id="keycount"></a> Redis Key Count and Memory Size

Redis can handle up to 2<sup>32</sup> keys, and was tested in practice to handle at least 250 million keys per instance.
Every hash, list, set, and sorted set, can hold 2<sup>32</sup> elements.
VM memory is more likely to be a limiting factor than number of keys that can be handled.


##  <a id="smoke"></a>Smoke Tests

Ops Manager runs Redis for PCF smoke tests as a post-install errand.  The operator can also run the smoke tests errand by using `bosh run errand smoke-tests`. For more information see [Redis for PCF Smoke Tests](./smoke-tests.html).

<p class="note"><strong>Note</strong>: Smoke tests will fail unless you enable global default application security groups (ASGs). You can enable global default ASGs by binding the ASG to the <code>system</code> org without specifying a space. To enable global default ASGs, use <code>cf bind-running-security-group</code>.</p>
