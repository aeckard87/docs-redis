---
title: Introduction for Operators
owner: London Services
---

<strong><%= modified_date %></strong>

This topic is for PCF operators. It introduces some best practices, but does not provide details about operation.


## <a id="Best Practice"></a>Best Practices

Pivotal recommends that operators follow these guidelines:

* **Resource Allocation**---Work with app developers to anticipate memory requirements and to configure VM sizes.
    Instances of Dedicted-VM and Shared-VM services have identical VM sizes.
    However, with the On-Demand service, app developers can choose from three different plans, each with its own VM size and quota. See the service offering for the [On-Demand Plan](./architecture.html) and [Resource Usage Planning for On-Demand plans](./architecture.html#resource).
* **Logs**---Configure a syslog output.
    Storing logs in an external service helps operators debug issues both current and historical. See [Configure Syslog Output](./installing.html#syslog).
* **Monitoring**---Set up a monitoring dashboard for metrics to track the health of the installation.
* **Backing Up Data**---When using Redis for persistence, configure automatic backups so that data can be restored in an emergency.
    Validate the backed-up data with a test restore.
    On-Demand instances are configured for cache uses and are not intended for backups. See [Configuring Automated Backups](./auto-backup.html) and [Manually Backing up and Restoring](./manual-br.html).
* **Using**---Instances of the On-Demand and Dedicated-VM services run on dedicated VMs.
    Apps in production should have a dedicated instance to prevent performance issues caused by sharing an instance.
    The Shared-VM service does not provide a Dedicated-VM per instance,
    and Pivotal recommends that you only use it for development and testing. See the service offerings for the [On-Demand Plan](./architecture.html) and the [Dedicated and Shared Plans](./architecture-pp.html).

## <a id="keycount"></a> Redis Key Count and Memory Size

Redis can handle up to 2<sup>32</sup> keys, and was tested in practice to handle at least 250 million keys per instance.
Every hash, list, set, and sorted set, can hold 2<sup>32</sup> elements.
VM memory is more likely to be a limiting factor than number of keys that can be handled.

## <a id="errands"></a>Errands
PCF Redis includes the errands listed below.
### Post-deploy errands
- `Broker Registrar`
Registers the cf-redis-broker with CloudFoundry to offer the `p-redis` offering (`shared-vm` and `dedicated-vm` plans).
- `Smoke Tests`
Runs lifecycle tests for `shared-vm` and `dedicated-vm` plans if these have been enabled and there is remaining quota available. The tests cover provisioning, binding, reading, writing, unbinding and deprovisioning of service instances in enabled plans of `p-redis`.
- `Register On-Demand Broker`
Registers the on-demand Redis broker with CloudFoundry to offer the `p.redis` offering (on-demand plans).
- `On-Demand Smoke Tests`
Runs lifecycle tests for enabled plans of the `p.redis` offering if there is remaining quota available. The tests cover provisioning, binding, reading, writing, unbinding and deprovisioning of service instances in enabled plans of `p.redis`.
- `Upgrade All On-Demand Service Instances`
Upgrades on-demand service instances to use the latest service release, stemcell, or updated plan configuration.

### Pre-delete errands
- `Broker Deregistrar`
Deregisters the cf-redis-broker.
- `Delete All On-Demand Service Instances and Deregister Broker`
Deletes all on-demand instances and deregisters the on-demand Redis broker.

The above post-deploy errands are run by default whenever `Apply Changes` is triggered.

### Skipping errand execution during upgrades
Running the post-deploy errands is recommended at any trigger of `Apply Changes`. However this practice can extend the duration of `Apply Changes` by several minutes every time.
If the upgrade includes configuration changes on the PCF Redis tile or a new stemcell version (i.e. the tile will be redeployed when clicking `Apply Changes`), the operator must run all post-deploy errands.

Sometimes the change does not involve configuration specifically on the Redis tile. When that's the case, the following section describes the scenarios where is is safe to omit running some errands.

#### `Broker Registrar`, `Register On-Demand Broker`
- Required to run them if there are changes in the BOSH director or ERT that would mean that the CF system domain or the address where the on-demand broker is deployed have changed.
That's because in the above scenarios, the address where the service brokers are reachable by Cloud Foundry has changed.
We <a href="./upgrade.html#network-upgrades">recommend</a> against changing the cloud configuration in a way that will change the ranges where the PCF Redis tile deploys VMs.
- Good practice to run them at any change touching the BOSH director tile/ERT.
- Not necessary to run them if the change only involves other service tiles. Currently PCF Redis does not integrate with other tiles except the director and ERT.

#### `smoke-tests`, `on-demand-broker-smoke-tests`
- Required to run them if the register errands have run.

#### `Upgrade All On-Demand Service Instances`
- Required to run them if there have been changes in the stemcell used by the PCF Redis tile.
- Not necessary to run them if there are no on-demand instances provisioned.


##  <a id="smoke"></a>Smoke Tests

Ops Manager runs Redis for PCF smoke tests as a post-install errand. The operator can also run the smoke tests errand by using `bosh run errand smoke-tests`. For more information see [Redis for PCF Smoke Tests](./smoke-tests.html).

<p class="note"><strong>Note</strong>: Smoke tests will fail unless you enable global default application security groups (ASGs). You can enable global default ASGs by binding the ASG to the <code>system</code> org without specifying a space. To enable global default ASGs, use <code>cf bind-running-security-group</code>.</p>
