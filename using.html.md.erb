---
title: Using Redis for PCF
owner: London Services
---

<strong><%= modified_date %></strong>

Redis for PCF can be used both via Pivotal Apps Manager and the CLI, both methods are outlined below. An example application has also been created to help application developers get started with Redis for PCF, and can be [downloaded here](https://github.com/pivotal-cf/cf-redis-example-app/archive/master.zip).

See [Redis for PCF Recommended Usage](./recommended.html) for recommendations regarding Redis for PCF service plans, and memory allocation.

## <a id="create"></a>Creating a Redis Service Instance

The following procedure describes how to create a Redis service instance in the Pivotal Cloud Foundry Elastic Runtime environment.

### <a id="plans"></a>Available Plans

Before creating a Redis instance, it is worth being aware of the three available plans:

<table border="1" class="nice">
<tr>
<th><strong>Plan Name</strong></th>
<th><strong>Suitable for</strong></th>
<th><strong>Tenancy Model per Instance</strong></th>
<th><strong>Highly Available</strong></th>
<th><strong>Backup Functionality</strong></th>
</tr>

<tr>
<td><b>On-Demand</b></td>
<td>Cache uses (small, medium and large)</td>
<td>Dedicated VM</td>
<td>No</td>
<td>No</td>
</tr>


<tr>
<td><b>Shared-VM</b></td>
<td>Lighter workloads that do not require dedicated resources</td>
<td>Shared VM</td>
<td>No</td>
<td>Yes</td>
</tr>

<tr>
<td><b>Dedicated-VM</b></td>
<td>Increased workloads that require dedicated resources</td>
<td>Dedicated VM</td>
<td>No</td>
<td>Yes</td>
</tr>

</table>

### Using Pivotal Apps Manager

1. From within Pivotal Apps Manager, select Marketplace from the left navigation menu under Spaces. The Services Marketplace displays.
1. Select **Redis** from the displayed tiles and click to view the available plans.
1. Click on the appropriate **Select this plan** button to select the required **Redis Service Plan**.
1. In the Instance Name field, enter a name that will identify this specific Redis service instance.
1. From the Add to Space drop-down list, select the space where you or other users will deploy the applications that will bind to the service.
1. Click the **Add** button.

### Using the CLI

1. Run `cf marketplace` to view the available service plans. This example shows the p-redis service which offers the dedicated-VM and shared-VM plan. The On-Demand service plan introduced in 1.8 is reffered to as `p.redis` in the marketplace:

    <pre class=terminal>
    $ cf marketplace

    Getting services from marketplace in org system / space apps-manager as admin...
    OK

    service          plans                     description
    p-redis          shared-vm, dedicated-vm   Redis service to provide a key-value store

    TIP:  Use 'cf marketplace -s SERVICE' to view descriptions of individual plans of a given service.
    </pre>

1. Run `cf create service` to create the service plan. Include the service plan name as listed in the Services Markeplace and a descriptive name you want to use for the service:

    <pre class=terminal>
    $ cf create-service p-redis SERVICE-PLAN-NAME SERVICE-INSTANCE-NAME
    </pre>

    <br />For example:

    <pre class=terminal>
    $ cf create-service p-redis shared-vm redis
    </pre>

## <a id="bind"></a>Binding an Application to the Redis Service

The following procedures describe how to bind a Redis service instance to your Pivotal Cloud Foundry application. This can be done via the Pivotal Apps Manager or Using the Pivotal Cloud Foundry CLI.

### Using Pivotal Apps Manager

1. Select the application that you wish to bind to the service. A page displays showing the already bound services and instances for this application.
1. Click Bind. A list of available services displays.
1. Click the Bind button for the Redis service you want to bind to this application.
1. Start or restage your app from the command line:

    <pre class=terminal>
    $ cf restage APPLICATION-NAME
    </pre>

### Using the CLI

1. Run `cf services` to view running service instances.

    <pre class=terminal>
    $ cf services

    Getting services in org system / space apps-manager as admin...
    OK

    name                service         plan        bound apps    last operation
    my-redis-instance   p-redis         shared-vm                 create succeeded
    </pre>

1. Run `cf bind-service` to bind the application to the service instance.

    <pre class=terminal>
    $ cf bind-service APPLICATION-NAME SERVICE-INSTANCE-NAME
    </pre>

    For example:

    <pre class=terminal>
    $ cf bind-service my-application redis
    </pre>
1. Run `cf restage` to restage your application.

    <pre class=terminal>
    $ cf restage APPLICATION-NAME
    </pre>

    ## <a id="vcap-services"></a>Entries in the VCAP_SERVICES Environment Variable

Applications running in Cloud Foundry gain access to the bound service instances via an environment variable credentials hash called VCAP\_SERVICES. An example hash is show below:
<pre>
  <code>
    {
      "p-redis": [{
        "credentials": {
             "host": "10.0.0.11",
             "password": "&lt;redacted&gt;",
             "port": 6379
        },
        "label": "p-redis",
        "name": "redis",
        "plan": "dedicated-vm",
        "provider": null,
        "syslog_drain_url": null,
        "tags": [
         "pivotal",
         "redis"
        ],
        "volume_mounts": []
      }]
    }
  </code>
</pre>

You can search for your service by its <code>name</code>, given when creating the service instance, or dynamically via the <code>tags</code> or <code>label</code> properties.


## <a id="delete"></a>Deleting a Redis Instance

When you delete a Redis service instance, all applications that are bound to that service are automatically unbound and any data in the service instance is cleared.

### Using Pivotal Apps Manager

1. Locate the row under Services that contains the service instance you want to delete and click **Delete**.
1. If you had applications that were bound to this service, you may need to restage or re-push your application for the application changes to take effect.

    <pre class=terminal>
    $ cf restage APPLICATION-NAME
    </pre>


### Using the CLI

1. Run `cf delete-service` and include the service instance name that you would like to delete. Enter `y` when prompted to confirm.

    <pre class=terminal>
    $ cf delete-service SERVICE-INSTANCE-NAME
    </pre>

    <br />For example:

    <pre class=terminal>
    $ cf delete-service my-redis-instance

    Really delete the service my-redis-instance?> y
    Deleting service my-redis-instance in org system / space apps-manager as admin...
    OK
    </pre>

1. If you had applications that were bound to this service, you may need to restage or re-push your application for the application changes to take effect.

    <pre class=terminal>
    $ cf restage APPLICATION-NAME
    </pre>
