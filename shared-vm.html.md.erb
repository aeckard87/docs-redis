---
title: Redis for Pivotal Cloud Foundry&reg;
---

# Shared-VM Plan

An instance of this plan, provisions a single Redis process, on a single **shared VM**, which is suitable for development workloads.

We **do not** recommend using this in a production environment.

Data persistence is enabled through the use of `RDB` and `AOF`.

## Operator Notes
* This plan can be disabled by setting the `Max instances limit` on the `Shared-VM Plan` tab in OpsManager to be `0`.
* The maximum number of instances can be increased from the default 5 to a value of your choosing. If you increase the number of instances that can be run on this single VM, you should consider increasing the resources allocated to the VM. In particular RAM and CPU. You can overcommit to a certain extent, but may start to see performance degradations.
* You can also increase the maximum amount of RAM allocated to each Redis process (service instance) that is running on this VM
* If you decrease the service instance limit, any instances that are running where the count is now greater than the limit are not terminated. They are left to be removed naturally, until the total count drops below the new limit you cannot create any new instances. For example if you had a limit of 10 and all were used and reduced this to 8, the two instances will be left running until you terminate them yourself. 

## Diagram

<%= image_tag("shared.jpeg") %>

## Known Limitations

Limitations with the current `shared-vm` plan include:

* It cannot be scaled beyond a single virtual machine.
* It has no backup and restore capabilities.
* The following commands are disabled: `CONFIG`, `MONITOR`, `SAVE`, `BGSAVE`,
  `SHUTDOWN`, `BGREWRITEAOF`, `SLAVEOF`, `DEBUG`, and `SYNC`.
* Constraining CPU and/or disk usage is not supported.
