---
title: Overview of Redis for PCF v1.8
owner: London Services
---

This topic describes the significant new features in Redis for PCF v1.8.
This topic also presents a checklist that you can use to decide if Redis for PCF is ready to meet your business requirements.

##<a id="intro"></a> Introduction

Redis for PCF v1.8 introduces the On-Demand Service, which provides dedicated instances of configurable Redis instances tailored for caching that App Developers can provision on-demand from the command line. The Redis for PCF On-Demand service is designed to improve the flexibility in how and when instances are provisioned and allows for more efficient and seamless resource use for both Operator and App Developer. Additionally, both Operator and App Developer can configure essential Redis settings. Redis for PCF v1.8 also packages the p-redis service from the earlier Redis for PCF tiles.

Redis for PCF's On-Demand Service leverages the [on-demand service broker](https://docs.pivotal.io/svc-sdk/odb/0-15/).

## <a id="features"></a>New in This Release

The following features are new in Redis for PCF v1.8:

+ <strong>Operator enabled plans</strong> — Operators can enable and configure three service plans for dynamically provisioned instances with different memory and disk sizes.
+ <strong>Operator set Redis properties</strong> - Operators can set select Redis properties for each plan.
+ <strong>Optimized for cache use cases</strong> - The default `maxmemory-policy` setting for these plans is `allkeys-lru`. This can be updated by the App Developer to other cache options.
+ <strong>Quotas</strong> — Operators can set plan-level quotas and a global quota across all on-demand instances.
+ <strong>App Developer provisioned instances</strong> — App Developers can create an Operator-configured plan from the command line.
+ <strong>App Developer set Redis properties via arbitrary parameters</strong> — App Developers can set select Redis settings for each instance.

## <a id="service"></a>On Demand Service Plan Descriptions

PCF Redis offers three on-demand plans as the p.redis service within the PCF Redis tile. Below is a description of each plan as it appears in the cf marketplace and its intended use case.

* **Small Cache Plan**- A Redis instance deployed to a dedicated VM, suggested to be configured with ~1GB of memory and >3.5GB of persistent disk.
* **Medium Cache Plan** - A Redis instance deployed to a dedicated VM, suggested to be configured with ~2GB of memory and >10GB of persistent disk.
* **Large Cache**- A Redis instance deployed to a dedicated VM, suggested to be configured with ~4GB of memory and >14GB of persistent disk.

For each service plan, the operator can configure the **Plan name**, **Plan description**, **Server VM type** and **Server Disk type**, or choose to disable the plan completely.

## Additional Redis Configurations

The operator can configure further properties per plan beyond memory and disk sizes. Appropriate defaults have been pre-configured according to the memory/disk size of each plan.

Operators can update certain plan settings after the plans have been created.
If the Operator updates the VM size, disk size, or the Redis configuration settings (enabling Lua Scripting, max-clients, timeout and TCP keep-alive), these settings will be implemented in all instances already created. Operators should not downsize the VMs or disk size as this can cause data loss in pre-existing instances.

<table border="1" class="nice">
  <tr>
    <th>Property</th>
    <th>Default</th>
    <th>Description</th>
  </tr>
  <tr>
    <td>Redis Client Timeout</td>
    <td>3600</td>
    <td>Server timeout for an idle client specified in seconds (e.g., 3600).</td>
  </tr>
  <tr>
    <td>Redis TCP Keepalive</td>
    <td>60</td>
    <td>The max number of connected clients at the same time.</td>
  </tr>
  <tr>
    <td>Max Clients</td>
    <td>1000/5000/10000 (small/medium/large)</td>
    <td>The max number of connected clients at the same time.</td>
  </tr>
  <tr>
    <td>Lua Scripting</td>
    <td>Enabled</td>
    <td>Enable/Disable Lua scripting</td>
  </tr>
  <tr>
    <td>Plan Quota</td>
    <td>20</td>
    <td>Maximum number of Redis service instances for this plan, across all orgs and spaces.</td>
  </tr>
</table>

Application Developers can configure their Redis instances with arbitrary parameters. Please view <a href="https://redis.io/commands">the Redis documentation</a> for more detail.

<table border="1" class="nice">
  <tr>
    <th>Property</th>
    <th>Default</th>
    <th>Options</th>
    <th>Description</th>
  </tr>
  <tr>
    <td><code>maxmemory-policy</code></td>
    <td><code>allkeys-lru</code></td>
    <td><code>allkeys-lru</code>, <code>noeviction</code>, <code>volatile-lru</code>, <code>allkeys-random</code>, <code>volatile-ttl</code></td>
    <td>Sets the behavior Redis follows when `maxmemory` is reached</td>
  </tr>
  <tr>
    <td><code>notify-keyspace-events</code></td>
    <td>""</td>
    <td>Set a combination of the following characters (e.g., "Elg"): K, E, g, $, l, s, h, z, x, e, A</td>
    <td>Sets the keyspace notifications for events that affect the Redis data set</td>
  </tr>
  <tr>
    <td><code>slowlog-log-slower-than</code></td>
    <td>10000</td>
    <td>0-20000</td>
    <td>Sets the threshhold execution time (seconds). Commands that exceed this execution time are added to the slowlog.</td>
  </tr>
  <tr>
    <td><code>slowlog-max-len</code></td>
    <td>128</td>
    <td>1-2024</td>
    <td>Sets the length (count) of the slowlog queue.</td>
  </tr>
</table>

##<a id="checklist"></a> Enterprise-Ready Checklist

Review the following table to determine if Redis for PCF v1.8 has the features needed to support your enterprise.

<table border="1" class="nice">
<tr><th colspan=2>Plans and Instances</th><th>More Information</th></tr>
<tr><td>On-Demand, Dedicated-VM and Shared-VM plans</td><td>Redis for PCF provides On-Demand, dedicated VM and shared VM service plans.</td><td><a href="/redis/1-8/architecture.html#plans">Plans</a></td></tr>
<tr><td>Customizable plans</td><td>For the On-Demand Plan and Dedicated-VM plan, the operator can customize the VM and disk size.</td><td><a href="/redis/1-8/installing.html#service-plans">Configuring</a></td></tr>

<tr><th colspan=2>Installation and Upgrades</th><th>More Information</th></tr>
<tr><td>Product upgrades</td><td>Redis for PCF can be upgraded from v1.7 tiles</td>
     <td><a href="/redis/1-8/installing.html#upgrades">Upgrading Redis for PCF</a></td></tr>
<tr><td>Deployment Smoke Tests</td><td>Redis for PCF installation and upgrade runs
        a post deployment BOSH errand that validates basic Redis operations</td>
    <td><a href="/redis/1-8/smoke-tests.html">Smoke Tests</a></td></tr>

<tr><th colspan=2>Maintenance and Backups</th><th>More Information</th></tr>
<tr><td>Operational Monitoring and Logging</td><td>Redis for PCF v1.8 provides metrics for monitoring On-Demand plan usage and quotas and syslog redirection to external log ingestors.</td>
    <td><a href="/redis/1-8/monitoring.html">Monitoring Redis for PCF</a></td></tr>
<tr><td>Backup and Restore</td><td>Redis for PCF v1.8 includes automatic backups on a configurable schedule to a variety of destinations for Dedicated-VM and Shared-VM plans, as well as scripts for backup and restore of service instances. The On-Demand plan does not offer this.
</td><td><a href="/redis/1-8/manual-br.html">Manual Backup and Restore of Redis for PCF</a></td></tr>

<tr><th colspan=2>Scale and Availability</th><th>More Information</th></tr>
<tr><td>Scale</td><td>Redis for PCF has been tested with 60GB of data</td><td></td></tr>
<tr><td>On-Demand Plan</td><td>Redis for PCF provides up to 50 on-demand instances across plans</td><td></td></tr>
<tr><td>Ability to Scale Up / Down</td><td>Operators can scale VMs up, but not down</td><td><a href="/redis/1-8/installing.html#service-plans">Configuring</a></td></tr>
<tr><td>Rolling Deployments</td><td>Redis for PCF does not support rolling deployments because it is single node; the service is unavailable during upgrades.</td><td><a href="/redis/1-8/installing.html#upgrades">Upgrades</a></td></tr>
<tr><td>AZ Support</td><td>Assigning multiple AZs to Redis jobs does not guarantee high availability.</td>
    <td><a href="#other-notes">About Multiple AZs in Redis for PCF</a></td></tr>

<tr><th colspan=2>Encryption</th><th>More Information</th></tr>
<tr><td>Encrypted Communication in Transit</td><td>Redis for PCF has been tested successfully with the BOSH IPsec Add-on</td>
    <td><a href="https://docs.pivotal.io/addon-ipsec/index.html">Securing Data in Transit with the IPsec Add-on</a></td></tr>

</table>


## <a id="other-notes"></a>About Multiple AZs in Redis for PCF v1.8

Redis for PCF v1.8 supports configuring multiple AZs.
However, assigning multiple AZs to Redis jobs does not guarantee high availability.

+ On-Demand plans can be assigned to any of the configured availability zones.
However each instance still operates as a single node with no clustering.
+ Shared-VM instances run on a single node in just one of the configured availability zones and are therefore not highly available.
+ Dedicated-VM instances can be assigned to any of the configured availability zones.
However each instance still operates as a single node with no clustering.
This separation over availability zones provides no high availability.


##<a id="more-info"></a> More Information

The following table lists where you can find topics related to the information on this page:

| For more information about&hellip; | See&hellip; |
|----------------------------|-------------|
|the v1.8 releases       |<a href="/redis/1-8/release.html">Release Notes</a>|
