---
title: Manually Backing Up and Restoring Redis for PCF
owner: London Services
---

<strong><%= modified_date %></strong>

<p class="note"><strong>Note</strong>:
This topic uses the <a href="https://bosh.io/docs/cli-v2.html">BOSH CLI v2</a>,
available as <code>bosh2</code> in the Ops Manager v1.11 and later.
</p>

## <a id="identify"></a>Identify your target Redis instances
### <a id="identify-odb"></a>On-Demand
1. [Follow these steps](http://docs.pivotal.io/pivotalcf/customizing/trouble-advanced.html#ssh) to SSH onto your Ops Manager installation.
1. Identify your service instance GUID by running `cf service SERVICE_INSTANCE_NAME --guid`.
1. Using the GUID you identified above, SSH onto your service instance by running `bosh2 -d service-instance_<GUID> ssh`.

### <a id="identify-dedicated"></a>Dedicated-VM
1. Retrieve the deployment name of the installed product. To find the deployment name, do the following steps:
    * From the OpsManager UI, click on the Redis for PCF tile.
    * Copy the part of the URL that starts with "p-redis-".
1. [Follow these steps](http://docs.pivotal.io/pivotalcf/customizing/trouble-advanced.html#ssh) to SSH onto your Ops Manager installation.
1. Identify the node which holds the instance you want to back up by running `bosh2 -d REDIS-DEPLOYMENT-NAME vms`.
  * An example output:
  <img src="images/bosh_vms.png" alt="OpsManager VM view">
  * If you don't know which dedicated-node instance to use given a cf instance, follow these steps:
    1. `cf env APP-BOUND-TO-REDIS-INSTANCE` or if you do not have an app bound to the dedicated instance,
      run the following command to create a service key:<br>
      <code>cf create-service-key DEDICATED-SERVICE-INSTANCE mykey && cf service-key DEDICATED-SERVICE-INSTANCE mykey</code>
    1. In the output of the previous command there should be an IP address shown which corresponds to an IP address show in `bosh2 vms`
1. Ssh onto the vm `bosh2 -d REDIS-DEPLOYMENT-NAME ssh dedicated-node/<identifier>`. 

### <a id="identify-shared"></a>Shared-VM
1. Retrieve the deployment name of the installed product. To find the deployment name, do the following steps:
    * From the OpsManager UI, click on the Redis for PCF tile.
    * Copy the part of the URL that starts with "p-redis-".
1. [Follow these steps](http://docs.pivotal.io/pivotalcf/customizing/trouble-advanced.html#ssh) to SSH onto your Ops Manager installation.
1. Ssh onto the broker VM `bosh2 -d REDIS-DEPLOYMENT-NAME ssh cf-redis-broker`

## <a id="make-backup"></a>Making a Manual Backup

* Identify and ssh onto your target instance by following the steps described in the [Identify section](#identify)
* To create a snapshot on the instance itself run `sudo /var/vcap/jobs/redis-backups/bin/backup --snapshot`. This creates a new rdb file in `/var/vcap/store/redis-backup`
* To create a snapshot in the pre-configured remote backup destination run `sudo /var/vcap/jobs/service-backup/bin/manual-backup`. **Backups must be enabled in the tile**.

#### Notes

* Triggering a manual backup of a large `dump.rdb` file can take so long that your SSH connection times out.
Ensure that you have given yourself enough of a timeout to complete the backup.

## <a id="restore"></a>Restore Redis Instance from a Backup

### To a Local System

You can choose to restore the RDB file to a local Redis instance.

The steps to do this depend on your configuration and setup.
For more information, see the [Redis documentation](http://redis.io/documentation).

### To Pivotal Cloud Foundry

You can also restore your backup file to another instance of the Redis for PCF tile. It can be the same or a different plan.

#### Prerequisites

* Same resource configuration as the instance from which you backed up.

* Ensure that the persistent disk is large enough to accommodate the temporary files used during the restore process.
  It should be **3.5x the amount of RAM in the VM**.

To restore your backup file to another instance of a Redis for PCF tile service instance:

1. Create a new instance of the plan that you want to restore to.

1. Identify and ssh to the VM which the instance of your plan is located on by following the steps from the [Identify](#identify) section above.

#### Preparation
1. Transfer your backup RDB file to a local path on the VM (`PATH-TO-RDB-BACKUP-ON-VM` has to be under `/var/vcap/store` directory.

1. To verify that the RDB file hasn't been corrupted, run `md5sum PATH-TO-RDB-BACKUP-ON-VM`
   and compare it against the contents of the `.md5` file named after the backup file.
   The values should be the same.
   The `.md5` file is located in the same bucket as the original backup file.

1. Switch to root user `sudo su`

### On-Demand and Dedicated-VM Plan

Run `/var/vcap/jobs/redis-backups/bin/restore --sourceRDB PATH-TO-RDB-BACKUP-ON-VM`

### Shared-VM Plan

1. Retrieve `{instance_guid}` by running: `cf service {instance_name} --guid`

1. Run `/var/vcap/jobs/redis-backups/bin/restore --sourceRDB {path-to-rdb-backup-on-vm} --sharedVmGuid {instance_guid}`


### Debugging Restore
If the restore fails partway through, you may need to manually run some commands to get the instance back into a healthy state.
 
It logs its process along the way and provides helpful messages in case of failure.

The logs are at `/var/vcap/sys/log/redis-backups/redis-backups.log`. <br />
If a step has failed, resolve the reason that caused it to fail and execute the failed step and every next step manually.
You can retrieve `{instance_password}` through the binding to your service instance: `cf service-key {instance_name} {key_name}`

#### On-demand and Dedicated-VM

1. **`StopAll`** <br />
   Run `monit stop all`

1. **`WaitForStop`** <br />
   Wait for monit services to enter the `not monitored` state, you can watch this with `watch monit summary`

1. **`DeleteExistingPersistenceFiles`** <br />
Clean up existing Redis data files:
  - `rm -f /var/vcap/store/redis/appendonly.aof`
  - `rm -f /var/vcap/store/redis/dump.rdb`

1. **`CopyBackupFileWithCorrectPermissions`** <br />
   Restore your Redis backup file to `/var/vcap/store/redis/dump.rdb`
   and correct the owner and permissions with `chown vcap:vcap /var/vcap/store/redis/dump.rdb && chmod 660 /var/vcap/store/redis/dump.rdb`

1. **`SetAppendOnly`** <br />
   `Edit the template Redis config file with `vim $(find /var/vcap/data/jobs/ -name redis.conf)` and make the following line changes:
  -  `appendonly yes` -> `appendonly no`

1. **`StartAll`** <br />
   Run `monit start all`

1. **`WaitForStart`** <br />
   Wait for monit services to enter the `running` state, you can watch this with `watch monit summary`

1. **`RewriteAOF`** <br />
   Run `/var/vcap/packages/redis/bin/redis-cli -a {instance_password} BGREWRITEAOF`

1. **`RewriteAOF`** <br />
   Run `watch "/var/vcap/packages/redis/bin/redis-cli -a {instance_password} INFO | grep aof_rewrite_in_progress"`
   until `aof_rewrite_in_progress` is `0`

1. **`StopAll`** <br />
   Run `monit stop all`

1. **`WaitForStop`** <br />
   Wait for monit services to enter the `not monitored` state, you can watch this with `watch monit summary`

1. **`ChownToUserAndGroup`** <br />
   Set correct owner on `appendonly.aof` by running `chown vcap:vcap /var/vcap/store/redis/appendonly.aof`

1. **`SetAppendOnly`** <br />
   Edit the template Redis config file with `vim $(find /var/vcap/data/jobs/ -name redis.conf)` and make the following line changes:
     -  `appendonly no` -> `appendonly yes`

1. **`StartAll`** <br />
   Run `monit start all`


#### Shared-VM

1. **`StopAll`** <br />
   Run `monit stop all`

1. **`WaitForStop`** <br />
   Wait for monit services to enter the `not monitored` state, you can watch this with `watch monit summary`

1. **`SetConfigCommand`** <br />
   Edit the template Redis config file with `vim /var/vcap/store/cf-redis-broker/redis-data/{instance_guid}/redis.conf` and comment out the line:
  - `rename-command CONFIG "configalias"` -> `#rename-command CONFIG "configalias"`

1. **`SetRewriteCommand`** <br />
   Edit the template Redis config file with `vim /var/vcap/store/cf-redis-broker/redis-data/{instance_guid}/redis.conf` and comment out the line:
  - `rename-command BGREWRITEAOF ""` -> `#rename-command BGREWRITEAOF ""`

1. **`DeleteExistingPersistenceFiles`** <br />
   Clean up existing Redis data files if they exist:
  - `rm -f /var/vcap/store/cf-redis-broker/redis-data/{instance_guid}/db/appendonly.aof`
  - `rm -f /var/vcap/store/cf-redis-broker/redis-data/{instance_guid}/db/dump.rdb`

1. **`CopyBackupFileWithCorrectPermissions`** <br />
   Restore your Redis backup file to `/var/vcap/store/cf-redis-broker/redis-data/{instance_guid}/db/dump.rdb`
   and correct the owner and permissions with `chown vcap:vcap /var/vcap/store/cf-redis-broker/redis-data/{instance_guid}/db/dump.rdb && chmod 660 /var/vcap/store/cf-redis-broker/redis-data/{instance_guid}/db/dump.rdb`

1. **`SetAppendOnly`** <br />
   Edit the template Redis config file with `vim /var/vcap/store/cf-redis-broker/redis-data/{instance_guid}/redis.conf`
   and make the following line changes:
  -  `appendonly yes` -> `appendonly no`

1. **`StartAll`** <br />
   Run `monit start all`

1. **`WaitForStart`** <br />
   Wait for monit services to enter the `running` state, you can watch this with `watch monit summary`

1. **`RewriteAOF`** <br />
   Run `/var/vcap/packages/redis/bin/redis-cli -a {instance_password} BGREWRITEAOF`

1. **`RewriteAOF`** <br />
   Run `watch "/var/vcap/packages/redis/bin/redis-cli -a {instance_password} INFO | grep aof_rewrite_in_progress"`
   until `aof_rewrite_in_progress` is `0`

1. **`StopAll`** <br />
   Run `monit stop all`

1. **`WaitForStop`** <br />
   Wait for monit services to enter the `not monitored` state, you can watch this with `watch monit summary`

1. **`ChownToUserAndGroup`** <br />
   Set correct owner on `appendonly.aof` by running `chown vcap:vcap /var/vcap/store/redis/appendonly.aof`

1. **`SetAppendOnly`** <br />
   Edit the template Redis config file with `vim /var/vcap/store/cf-redis-broker/redis-data/{instance_guid}/redis.conf`
   and make the following line changes:
  -  `appendonly no` -> `appendonly yes`

1. **`SetConfigCommand`** <br />
   Edit the template Redis config file with `vim /var/vcap/store/cf-redis-broker/redis-data/{instance_guid}/redis.conf`
   and uncomment the line:
  `#rename-command CONFIG "configalias"` -> `rename-command CONFIG "configalias"`

1. **`SetRewriteCommand`** <br />
   Edit the template Redis config file with `vim /var/vcap/store/cf-redis-broker/redis-data/{instance_guid}/redis.conf`
   and uncomment the line:
  `#rename-command BGREWRITEAOF ""` -> `rename-command BGREWRITEAOF ""`

1. **`StartAll`** <br />
   Run `monit start all`

## <a id="recovery"></a>Recover Redis Instances

In the event of a recovery of Cloud Foundry, it is possible to recover bound
Redis instances to healthy states that are in sync with Cloud Foundry. There are
a few caveats to being able to recover previous instance state fully that
depend on your plan.

### Shared-VM Plan Caveats

* You need a backed up RDB Redis dump file - this would be stored in your S3
buckets if you have backups configured.

* You need a backed up `/var/vcap/store/cf-redis-broker/redis-data` directory
from the service broker node. You do not need to backup and `*.aof` or

`*.rdb` files from subdirectories if you have backups configured.

### Dedicated-VM Plan Caveats

* You need a backed up RDB Redis dump file - this would be stored in your S3
buckets if you have backups configured.

* You need a backed up `/var/vcap/store/redis/statefile.json` from the service
broker node.

### Note

This procedure assumes that a recovery of service information and service keys
assigned to instances are restored with a restore of Cloud Foundry.

### Recovery Procedure

After redeploying Redis, take the following steps.

#### Shared-VM Plan

1. `bosh2 ssh` into the service broker node of your Redis deployment.
1. Run `monit stop all && pkill redis-server`
1. Wait for monit services to enter the `not monitored` state, you can watch
this with `watch monit summary`
1. Confirm no running instances of `redis-server` with
`ps aux | grep redis-server`
1. Copy the backed up `redis-data` directory into `/var/vcap/store/cf-redis-broker`
1. Follow the instructions [here](#restore) for your plan, skipping the first
four steps described here, for restoring your backed up Redis data.
1. Your Redis instance is now recovered.

#### Dedicated-VM Plan

1. `bosh2 ssh` into the service broker node of your Redis deployment.

1. Run `monit stop all`

1. Wait for monit services to enter the `not monitored` state, you can watch
this with `watch monit summary`

1. Copy the backed up `/var/vcap/store/cf-redis-broker/statefile.json` and
ensure ownership and permissions are correct with
`chown vcap:vcap /var/vcap/store/redis/dump.rdb && chmod 660 /var/vcap/store/redis/dump.rdb`

1. Follow the instructions [here](#restore) for your plan, skipping the first three steps
described here, for restoring your backed up Redis data.

1. Your Redis instance is now recovered.

## <a id="recovery"></a>Move Data from a Dedicated to On-Demand Instance

For the following it is assumed that you already have a cf-created dedicated and on-demand instance.
The flow is:

1. Take a manual or automatic backup of the dedicated instance.

1. Identify the deployment of the on-demand service.

1. Copy the `rdb` file created in step 1 to the instance identified in step 2.

1. Run the manual restore command on the on-demand instance.

### Take a Backup of the Dedicated or Shared VM Instance

To do a manual backup follow the procedure in [Trigger a Manual Backup for a Shared-VM or Dedicated-VM Plan](#make-backup).
You need the RDB file from this backup.


### Move Dump File to an On-Demand Instance
You can move your backed up rdb file from your local machine to the service instance [identified](identify-odb) via `bosh scp`.
You cannot scp a file directly into `/var/vcap/store` which is required for the restore script so this is a two step process.

```
bosh -d service-instance_GUID scp dump.rdb :/tmp/dump.rdb
bosh -d service-instance_GUID ssh --command "sudo mv /tmp/dump.rdb /var/vcap/store/dump.rdb"
```

### Restore an On-Demand Instance

1. SSH onto the on-demand service instance.

1. Run `sudo /var/vcap/jobs/redis-backups/bin/restore --sourceRDB /var/vcap/store/dump.rdb`

### Debugging

* Run the restore script with `logLevel` set to `DEBUG`: `sudo /var/vcap/jobs/redis-backups/bin/restore --sourceRDB /var/vcap/store/dump.rdb --logLevel DEBUG`
* If the script only partially runs, it may have stopped other processes.
  Use `monit` to start them if needed.
